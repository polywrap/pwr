type Module {
  exec(command: String!, options: ExecOptions): ExecOutput!
  spawn(command: String!, args: [String!]!, options: SpawnOptions): Boolean!
}

enum BufferEncoding {
  ascii,
  utf8,
  utf16le,
  ucs2,
  base64,
  base64url,
  latin1,
  binary,
  hex
}

enum IOType {
  overlapped,
  pipe,
  ignore,
  inherit
}

type ExecOptions {
  cwd: String
  env: Map @annotate(type: "Map<String!, String!>")
  encoding: BufferEncoding
  shell: String
}

type SpawnOptions {
  cwd: String
  env: Map @annotate(type: "Map<String!, String!>")
  stdio: IOType
  shell: String
}

type ExecOutput {
  stdout: String
  stderr: String
}

type Env {
  processId: String
  cwd: String
}
